<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Font Awesome CDN -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
    />
    <title>YourAPI</title>

    <style>
      @import url("https://fonts.googleapis.com/css2?family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap");
      @import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap");

      .source-code-pro {
        font-family: "Source Code Pro", monospace;
        font-optical-sizing: auto;
        font-weight: 400;
        font-style: normal;
      }

      .poppins-regular {
        font-family: "Poppins", sans-serif;
        font-weight: 400;
        font-style: normal;
      }

      .accentColor {
        color: gold;
      }

      /* Define the scaling animation */
      @keyframes scaleUp {
        0% {
          transform: scale(1); /* Start at normal size */
        }
        50% {
          transform: scale(1.1); /* Scale up to 1.5 times */
        }
        100% {
          transform: scale(1); /* Scale back to normal size */
        }
      }

      /* Apply the animation to the icon */
      .scaling-icon {
        animation: scaleUp 2s infinite; /* Apply the scaling animation */
      }
    </style>
  </head>
  <body>
    <div class="container-fluid p-3">
      <div class="row justify-content-center">
        <div class="col-sm-12 col-md-8 bg-dark p-3 rounded">
          <div class="logo">
            <h1 class="poppins text-warning">yourAPI</h1>
          </div>
          <div class="content">
            <p class="source-code-pro text-light p-1">
              YourAPI is a simple and flexible API platform that allows you to
              quickly manage and test database content.<br />
              Whether you want to create, retrieve, or search through content in
              your <span class="bg-warning text-dark">local database</span>,
              this API project is designed to help developers and API
              enthusiasts explore data management with ease
            </p>
            <p class="text-warning text-decoration-underline">
              CLONE / DOWNLOAD SOURCE CODE:
              <span
                ><a href="https://github.com/nirajan128/YourAPI"
                  ><i
                    class="fa-brands fa-2x fa-github accentColor scaling-icon"
                  ></i> </a
              ></span>
            </p>
          </div>
          <div>
            <h5 class="bg-warning text-dark p-2 fw-bold">Set up process</h5>

            <!-- step 1 -->
            <div class="p-3 source-code-pro text-light">
              <p class="fw-bold text-decoration-underline">
                Step 1: Set up PostgresSQL
              </p>
              <ul>
                <li>
                  Install PostgresSQL latest verion
                  <a href="https://www.postgresql.org/download/windows/"
                    >https://www.postgresql.org/download/windows/</a
                  >
                </li>
                <li>
                  Install pgAdmin4 or any other managment tool
                  <a href="https://www.pgadmin.org/download/pgadmin-4-windows/"
                    >https://www.pgadmin.org/download/pgadmin-4-windows/</a
                  >
                </li>
                <li>Connect to your databse locally</li>
                <li>Create a TABLE and name your rows accordingly</li>
              </ul>
            </div>

            <!-- step-2 -->
            <div class="p-3 source-code-pro text-light">
              <p class="fw-bold text-decoration-underline">
                Step 2: Set up API
              </p>
              <p>clone this repository and set up your local environment:</p>
              <ul>
                <li>
                  Install the required dependencies:
                  <span class="bg-warning text-dark">npm install</span>
                </li>
                <li>
                  Set up a PostgreSQL database and add your connection string in
                  a .env file as:
                  <span class="bg-warning text-dark"
                    >DATABASE_URL=postgres://username:password@localhost:5432/databaseName
                  </span>
                </li>
                <li>
                  Runt the server :
                  <span class="bg-warning text-dark">node index.js</span>
                </li>
              </ul>
              <p class="fw-bold">
                YourAPI will now be running on
                <span class="bg-warning text-dark">localhost:3000</span>
              </p>
            </div>

            <!-- step-3 -->
            <div class="p-3 source-code-pro text-light">
              <p class="fw-bold text-decoration-underline">
                Step 3: Add Content
              </p>
              <p>
                You can easily add new content to your local database using the
                form on the homepage. Just fill in the fields (title, rating,
                and image URL) / You can have different lable that tae different
                values, and hit "POST."
              </p>
            </div>

            <!-- step-2 -->
            <div class="p-3 source-code-pro text-light">
              <p class="fw-bold text-decoration-underline">
                Step 4: Explore API Routes
              </p>
              <p>
                YourAPI offers several useful routes to manage and retrieve
                data:
              </p>
              <ul class="bg-light text-dark">
                <li>
                  Get All Data: Fetch all content from the database using the
                  route: <span class="bg-warning text-dark">/content</span
                  ><br />This returns a JSON response with all the stored items.
                </li>
                <li>
                  Get Random Data: Fetch a random entry from your database:
                  <span class="bg-warning text-dark">/content/random </span>
                </li>
                <li>
                  Search Data: Search through your content based on the title:
                  <span class="bg-warning text-dark"
                    >/content/search?q=searchTerm
                  </span>
                </li>
              </ul>
              <p class="fw-bold">
                The site provides clear success and error messages whenever you
                add content. Successful actions show a green alert, while errors
                display a red alert. You can easily dismiss these alerts with
                the close button.
              </p>
            </div>

            <a href="https://github.com/nirajan128" class="text-warning"
              >@NIRAJAN_SHRESTHA 2024</a
            >
          </div>
        </div>
        <div
          class="col-sm-12 col-md-4 source-code-pro d-flex justify-content-center"
        >
          <form
            class="p-4 border border-dark rounded position-fixed shadow"
            action="/addContent"
            method="post"
          >
            <!-- Input 1 -->
            <div class="mb-3 fw-bold">
              <label for="title" class="form-label">Title</label>
              <input
                type="text"
                class="form-control"
                id="title"
                placeholder="Enter something..."
                name="title"
              />
            </div>

            <!-- Input 2 -->
            <div class="mb-3 fw-bold">
              <label for="rating" class="form-label">Rating</label>
              <input
                type="number"
                class="form-control"
                id="rating"
                name="rating"
              />
            </div>

            <!-- Input 3 -->
            <div class="mb-3 fw-bold">
              <label for="imgURL" class="form-label">Image URL</label>
              <input
                type="text"
                class="form-control"
                id="imgURL"
                name="imgURL"
              />
            </div>

            <!-- Submit Button -->
            <div class="text-center">
              <button type="submit" class="btn btn-primary">POST</button>
            </div>
          </form>

          <!-- Success/Error Message -->
          <% if (message) { %>
          <div
            class="alert <%= message.includes('successfully') ? 'alert-success' : 'alert-danger' %> alert-dismissible fade show mt-3"
            role="alert"
          >
            <%= message %>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="alert"
              aria-label="Close"
            ></button>
          </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>
